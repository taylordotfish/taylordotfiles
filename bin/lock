#!/bin/sh
# Copyright (C) 2023-2024 taylor.fish <contact@taylor.fish>
# License: GNU GPL version 3 or later
set -euf

run_i3lock_blocking() {
    local picom=
    if pkill '^picom$'; then
        picom=1
    fi
    i3lock -n "$@"
    if [ -n "$picom" ]; then
        exec picom
    fi
}

run_i3lock() {
    run_i3lock_blocking "$@" > /dev/null 2>&1 &
}

if cd ~/.cache/i3lock-screenshots 2> /dev/null; then
    (set +f; rm -f screen_*.png)
    OLDIFS=$IFS
    IFS='
'
    maxx=0
    maxy=0
    trap "rm -f screen_*.png" EXIT
    for line in $(~/scripts/monitor-utils.sh monitors); do
        index=$(printf '%s\n' "$line" | cut -f1)
        width=$(printf '%s\n' "$line" | cut -f2)
        height=$(printf '%s\n' "$line" | cut -f3)
        posx=$(printf '%s\n' "$line" | cut -f4)
        posy=$(printf '%s\n' "$line" | cut -f5)
        properties=$(printf '%s\n' "$line" | cut -f8)
        endx=$((posx+width))
        endy=$((posy+height))
        [ "$endx" -gt "$maxx" ] && maxx=$endx
        [ "$endy" -gt "$maxy" ] && maxy=$endy
        case ",$properties," in
            *,mono,*) ;;
            *)
                scrot -M "$index" screen_"$index".png
                mogrify -blur 10x10 screen_"$index".png
                ;;
        esac
    done
    im_args=
    for line in $(~/scripts/monitor-utils.sh monitors); do
        index=$(printf '%s\n' "$line" | cut -f1)
        posx=$(printf '%s\n' "$line" | cut -f4)
        posy=$(printf '%s\n' "$line" | cut -f5)
        if [ -f "screen_$index.png" ]; then
            im_args="$im_args screen_$index.png -geometry +$posx+$posy"
            im_args="$im_args -composite"
        fi
    done
    IFS=$OLDIFS
    convert -size "$maxx"x"$maxy" xc:white $im_args full.png
    run_i3lock -i full.png
    exit
fi

if [ -n "${MONOCHROME-}" ]; then
    run_i3lock -c ffffff
else
    run_i3lock -c 000000
fi
