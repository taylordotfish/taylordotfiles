#!/bin/sh
set -eu

for arg in "$@"; do
    case "$arg" in
        --overwrite)
            overwrite=1
            ;;
        --)
            break
            ;;
        --*)
            ;;
        -*o*)
            overwrite=1
            ;;
    esac
done

parse() {
    index=$1
    width=$2
    height=$3
    posx=$4
    posy=$5
}

get_monitor_geometry() {
    script=$(printf '%s' 's/^\s*\([0-9]\+\):\s*\S*\s*' \
        '\([0-9]\+\)[^x]*x\([0-9]\+\)[^+]*' \
        '+\([0-9]\+\)+\([0-9]\+\).*' \
        '/\1 \2 \3 \4 \5/p')
    xrandr --listactivemonitors | sed -n "$script"
}

set -f
OLDIFS=$IFS
monitor_geometry=$(get_monitor_geometry)
fullheight=0
IFS='
'
for line in $monitor_geometry; do
    IFS=' '
    parse $line
    bottom=$((posy+height))
    if [ "$bottom" -gt "$fullheight" ]; then
        fullheight=$bottom
    fi
done

im_args=
IFS='
'
for line in $monitor_geometry; do
    IFS=' '
    parse $line
    im_args="$im_args -draw 'rectangle $posx,0 $((posx+width)),$posy'"
    im_args="$im_args -draw 'rectangle $posx,$((posy+height))"
    im_args="$im_args $((posx+width)),$fullheight'"
done

set +f
IFS=$OLDIFS
scrot=$(PATH=/usr/bin:/usr/local/bin which scrot)

tmp=$(mktemp -d)
trap 'rm -r "$tmp"' EXIT
(cd "$tmp" && "$scrot" "$@")

for img in "$tmp"/*.png; do
    eval 'convert "$img" -fill white '"$im_args"' -alpha off "$img"'
    mv ${overwrite:--n} "$img" .
    i=0
    while [ -f "$img" ]; do
        name=$(basename "$img")
        mv -n "$img" "${name%.png}_$(printf '%03d' "$i").png"
        i=$((i+1))
    done
done
