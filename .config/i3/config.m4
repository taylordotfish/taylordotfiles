# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout somewhen, delete
# this file and re-run i3-config-wizard(1).

# i3 config file (v4)
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

include(esyscmd(`printf "\`%s'" "$HOME"')`/.conf.m4')
merge_env(`HIDPI', `MONOCHROME')
sinclude(`config.pre.m4')

set $mod Mod4

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym $mod+Shift+q kill

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+g split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+q focus child

# switch keyboard layout
bindsym $mod+Mod1+space exec --no-startup-id ~/.xkb/next-layout.sh

set $ws1 1: web
set $ws2 2: chat
set $ws3 3: code
set $ws4 4: term
set $ws5 5: mail
set $ws6 6: music
set $ws7 7: seven
set $ws8 8: eight
set $ws9 9: nine
set $ws10 10: audio

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# workspace navigation
bindsym Mod1+Mod4+Right workspace next
bindsym Mod1+Mod4+Left workspace prev
bindsym Mod1+Mod4+l workspace next
bindsym Mod1+Mod4+h workspace prev
bindsym Mod1+Mod4+Shift+Right move workspace to output right
bindsym Mod1+Mod4+Shift+Left move workspace to output left
bindsym Mod1+Mod4+Shift+l move workspace to output right
bindsym Mod1+Mod4+Shift+h move workspace to output left

# brightness keys
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +5%
bindsym XF86AudioPrev exec --no-startup-id brightnessctl set 5%-
bindsym XF86AudioPlay exec --no-startup-id brightnessctl set +5%

# volume keys
bindsym XF86AudioMute exec --no-startup-id \
    ~/scripts/pactl.sh set-sink-mute toggle
bindsym XF86AudioLowerVolume exec --no-startup-id \
    ~/scripts/pactl.sh set-sink-volume -2%
bindsym XF86AudioRaiseVolume exec --no-startup-id \
    ~/scripts/pactl.sh set-sink-volume +2%

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exit

# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# borders
for_window [class=".*"] border normal 0

# floating
for_window [class="^display(-|$)"] floating enable
for_window [class="^display(-|$)"] move position ifdefn(
    `HIDPI', `800 450', `400 225')
for_window [class="^kmag$"] floating enable
for_window [class="^kmag$"] resize set ifdefn(
    `HIDPI', `1600 1200', `800 600')

# dunst
bindsym Control+space exec --no-startup-id dunstctl close
bindsym Control+Shift+space exec --no-startup-id dunstctl close-all
bindsym Control+grave exec --no-startup-id dunstctl history-pop
bindsym Control+Shift+period exec --no-startup-id dunstctl context

# fonts
define_default(`I3_FONT',
    `-misc-fixed-medium-r-normal--13-120-75-75-c-70-iso10646-1')
define_default(`DMENU_FONT', ifelse(
    vsyscmd(`[ "$(fc-match "Misc Fixed" family)" = "Misc Fixed" ]'),
    `0', `Misc Fixed:pixelsize=13', `DejaVu Sans Mono:size=10'))
define_default(`I3_FONT_HIDPI', `pango:DejaVu Sans Mono 10')
define_default(`DMENU_FONT_HIDPI', `DejaVu Sans Mono:size=10')

define_default(`DMENU_COLORS')
define_default(`DMENU_COLORS_MONOCHROME',
    `-nf white -sb white -sf black')
dnl `-nf black -sb black -sf white')

ifdefn(`MONOCHROME', `pushdef(`DMENU_COLORS', `DMENU_COLORS_MONOCHROME')')
ifdefn(`HIDPI', `ifelse(
    pushdef(`I3_FONT', `I3_FONT_HIDPI')
    pushdef(`DMENU_FONT', `DMENU_FONT_HIDPI')
)')
font I3_FONT
bindsym $mod+d exec --no-startup-id dmenu_run -fn "DMENU_FONT" DMENU_COLORS

# terminal shortcuts
define_default(`TERM_COMMAND', `with-urxvt-transparency')
define_default(`TERM_COMMAND_MONOCHROME', `monoterm -b')
define(`COLOR_TERM', ifdefn(`MONOCHROME', `urxvt-color', `urxvt'))

bindsym $mod+Mod1+Return exec --no-startup-id \
    COLOR_TERM -title urxvt -e TERM_COMMAND tmux -2
bindsym $mod+Mod1+Shift+Return exec --no-startup-id \
    COLOR_TERM -title urxvt -e TERM_COMMAND bash
ifdefn(`MONOCHROME', `pushdef(`TERM_COMMAND', `TERM_COMMAND_MONOCHROME')')

bindsym $mod+Return exec --no-startup-id \
    urxvt -title urxvt -e TERM_COMMAND tmux -2
bindsym $mod+Shift+Return exec --no-startup-id \
    urxvt -title urxvt -e TERM_COMMAND bash

client.focused          #444444 #202020 #ffffff #000000 #000000
client.unfocused        #444444 #000000 #909090 #000000 #000000
client.focused_inactive #444444 #202020 #909090 #000000 #000000

#client.focused          #000000 #ffffff #000000 #ffffff #000000
#client.unfocused        #ffffff #ffffff #dddddd #ffffff #000000
#client.focused_inactive #000000 #ffffff #dddddd #ffffff #000000

bar {
    tray_output primary
    status_command i3status | python3 -u ~/.i3/status-wrapper.py
    colors {
        background #000000
        statusline #ffffff
        ifdefn(`MONOCHROME', `separator #bbbbbb')
        focused_workspace #303030 #303030 #ffffff
        active_workspace #202020 #202020 #c0c0c0
        inactive_workspace #101010 #101010 #909090

        #background #ffffff
        #statusline #000000
        #separator #000000
        #focused_workspace #000000 #ffffff #000000
        #active_workspace #000000 #ffffff #000000
        #inactive_workspace #ffffff #ffffff #000000
    }
}

sinclude(`config.post.m4')
`#' `vim:ft=conf'
